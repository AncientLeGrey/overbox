<?xml version='1.0' encoding='UTF-8'?>
<% if @ruby_versions.size > 1 then %>
<matrix-project>
<% else %>
<project>
<% end %>
  <actions/>
  <description><![CDATA[
Invoke rake tasks for project <%= '<'+'%= @project_name %'+'>' %>.<br/>
Use the <a href="batchTasks/">batchtasks</a> to bundle und deploy.<br/>
View in browser: <a target="_blank" href="/<%= '<'+'%= @project_name %'+'>' %>"><%= '<'+'%= @project_name %'+'>' %></a>
]]></description>
  <logRotator>
    <daysToKeep>-1</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.batch__task.BatchTaskProperty>
      <tasks>
        <hudson.plugins.batch__task.BatchTask>
          <name>bundle install</name>
          <script>bundle --no-color install</script>
        </hudson.plugins.batch__task.BatchTask>
        <hudson.plugins.batch__task.BatchTask>
          <name>bundle update</name>
          <script>bundle --no-color update</script>
        </hudson.plugins.batch__task.BatchTask>
        <hudson.plugins.batch__task.BatchTask>
          <name>deploy</name>
          <script>cd <%= '<'+'%= @project_path %'+'>' %> ; rake torquebox:deploy[<%= '<'+'%= @project_name %'+'>' %>]</script>
        </hudson.plugins.batch__task.BatchTask>
        <hudson.plugins.batch__task.BatchTask>
          <name>undeploy</name>
          <script>cd <%= '<'+'%= @project_path %'+'>' %> ; rake torquebox:undeploy</script>
        </hudson.plugins.batch__task.BatchTask>
      </tasks>
    </hudson.plugins.batch__task.BatchTaskProperty>
    <org.jenkinsci.plugins.envinject.EnvInjectJobProperty>
      <info>
        <propertiesContent>java_opts=</propertiesContent>
        <populateTriggerCause>false</populateTriggerCause>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
    </org.jenkinsci.plugins.envinject.EnvInjectJobProperty>
  </properties>
  <scm class="hudson.plugins.filesystem_scm.FSSCM">
    <path><%= '<'+'%= @project_path %'+'>' %></path>
    <clearWorkspace>false</clearWorkspace>
    <filterEnabled>false</filterEnabled>
    <includeFilter>false</includeFilter>
    <filters/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
<% if @ruby_versions.size > 1 then %>
  <axes>
    <hudson.matrix.TextAxis>
      <name>ruby_version</name>
      <values>
<% @ruby_versions.each do |ruby| %>
        <string><%= ruby %></string>
<% end %>
      </values>
    </hudson.matrix.TextAxis>
  </axes>
<% end %>
  <builders>
    <hudson.tasks.Shell>
      <command>( [ -f Gemfile.lock ] || bundle --no-color install )</command>
    </hudson.tasks.Shell>
    <hudson.plugins.rake.Rake>
      <rakeInstallation>(Default)</rakeInstallation>
      <rakeFile></rakeFile>
      <rakeLibDir></rakeLibDir>
      <rakeWorkingDir></rakeWorkingDir>
      <tasks>spec<% if @ruby_versions.size > 1 then %> ruby_version=${ruby_version}<% end %></tasks>
      <silent>false</silent>
    </hudson.plugins.rake.Rake>
  </builders>
  <publishers>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>spec/reports/*.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
  </publishers>
  <buildWrappers>
<% if @ruby_versions.size > 1 then %>
    <org.jenkinsci.plugins.envinject.EnvInjectBuildWrapper>
      <info>
        <propertiesContent>ruby_version=${ruby_version}</propertiesContent>
        <populateTriggerCause>false</populateTriggerCause>
      </info>
    </org.jenkinsci.plugins.envinject.EnvInjectBuildWrapper>
<% end -%>
  </buildWrappers>
<% if @ruby_versions.size > 1 then %>
</matrix-project>
<% else %>
</project>
<% end %>
